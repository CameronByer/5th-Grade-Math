{"version":3,"sources":["App.js","index.js"],"names":["choice","choices","Math","floor","random","length","randomInt","x","y","greatestFactor","abs","Question","props","changeGuess","guess","setState","submitGuess","state","newStreak","streak","answer","toString","generate","getSelectedProblems","keyHandler","e","nativeEvent","key","slice","includes","checkSubmit","console","log","document","addEventListener","this","removeEventListener","problemType","value","updatedProblemTypes","problemTypes","selected","push","level","options","modifiers","type","toLowerCase","question","shift","maxDigits","log10","max","min","place","negPlaceNames","posPlaceNames","placeName","digits","decimalIndex","decimalString","digit","round","parseFloat","baseMultiple","multiples","numMax","nums","maxMultiple","i","join","a","b","c","d","realpart","imagpart","View","style","flexDirection","flexWrap","Object","keys","map","Pressable","onPress","updateCheckbox","Text","styles","toggleable","color","bigCenter","TextInput","onChangeText","onKeyPress","placeholder","keyboardType","submitContainer","submit","Component","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","padding","textAlign","borderRadius","paddingHorizontal","paddingVertical","registerRootComponent","StatusBar"],"mappings":"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","file":"static/js/app.c3698b3e.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component, Fragment } from 'react'\r\nimport {\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from 'react-native'\r\n\r\nfunction choice(choices) {\r\n  var index = Math.floor(Math.random() * choices.length);\r\n  return choices[index];\r\n}\r\n\r\nconst randomInt = (x, y) => {\r\n  return x + Math.floor((y-x+1)*Math.random());\r\n}\r\n\r\nconst greatestFactor = (x, y) => {\r\n  if (x*y == 0) {\r\n    return x+y\r\n  }\r\n  return greatestFactor(y, Math.abs(x-y));\r\n}\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.generate(1, ['Unit 3']);\r\n    this.state = {...this.state,\r\n      'guess':'',\r\n      'streak':0,\r\n      'problemTypes': {'Addition': true, 'Subtraction': true, 'Multiplication': true, 'Division': true, 'Rounding': true, 'GCF': true, 'Unit 3': true},\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keyHandler, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.keyHandler, false);\r\n  }\r\n\r\n  changeGuess = (guess) => {\r\n    this.setState({'guess': guess});\r\n  }\r\n\r\n  submitGuess = () => {\r\n    if (this.state.guess != '') // Prevent blank guesses\r\n    {\r\n      let newStreak = this.state.streak;\r\n      if (this.state.guess == this.state.answer.toString()) {\r\n        newStreak++;\r\n        this.setState({...this.generate(newStreak+1, this.getSelectedProblems()), 'guess':''});\r\n      } else {\r\n        newStreak = 0;\r\n      }\r\n      this.setState({'streak': newStreak});\r\n    }\r\n  }\r\n\r\n  updateCheckbox(problemType, value) {\r\n    var updatedProblemTypes = this.state.problemTypes;\r\n    updatedProblemTypes[problemType] = value;\r\n    this.setState({'problemTypes': updatedProblemTypes});\r\n  }\r\n\r\n  getSelectedProblems() {\r\n    var selected = [];\r\n    for (var problemType in this.state.problemTypes) {\r\n      if (this.state.problemTypes[problemType]) {\r\n        selected.push(problemType);\r\n      }\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  generate(level=1, options=['Addition', 'Subtraction', 'Multiplication', 'Division', 'Rounding', 'GCF', 'Unit 3'], modifiers=[\"Decimals\"]) {\r\n    if (options.includes(\"Unit 3\")) {\r\n      options.push(\"complex add\");\r\n      options.push(\"complex sub\");\r\n      options.push(\"complex mult\");\r\n      //options.push(\"factor a=1\");\r\n    }\r\n    const type = choice(options).toLowerCase();\r\n    let question = '0';\r\n    let answer = '0';\r\n    if (type == 'addition') {\r\n      let x = randomInt(level, 5*level);\r\n      let y = randomInt(level, 5*level);\r\n      let shift = 0;\r\n      if (modifiers.includes(\"Decimals\")) {\r\n        const maxDigits = Math.floor(Math.log10(Math.max(x, y)))+1;\r\n        shift = randomInt(0, maxDigits);\r\n      }\r\n      question = (x/10**shift).toString() + '+' + (y/10**shift).toString();\r\n      answer = (x + y)/10**shift;\r\n      console.log(answer);\r\n    } else if (type == 'subtraction') {\r\n      const x = randomInt(level, 5*level);\r\n      const y = randomInt(level, 5*level);\r\n      question = Math.max(x, y).toString() + '-' + Math.min(x, y).toString();\r\n      answer = Math.abs(x - y);\r\n    } else if (type == 'multiplication') {\r\n      const x = randomInt(2, 2+2*level);\r\n      const y = randomInt(2, 2+2*level);\r\n      question = x.toString() + '*' + y.toString();\r\n      answer = x * y;\r\n    } else if (type == 'division') {\r\n      const x = randomInt(2, 2+2*level);\r\n      answer = randomInt(2, 2+2*level);\r\n      question = (x*answer).toString() + '/' + x.toString();\r\n    } else if (type == 'rounding') {\r\n      const place = randomInt(-3, 3);\r\n      const negPlaceNames = [\"ones\", \"tenths\", \"hundredths\", \"thousandths\"];\r\n      const posPlaceNames = [\"ones\", \"tens\", \"hundreds\", \"thousands\"];\r\n      const placeName = place > 0 ? posPlaceNames[place] : negPlaceNames[-place];\r\n      const digits = (place > 0 ? randomInt(place+1, place+Math.floor(level/10)) : randomInt(2-place, 2-place + Math.floor(level/10)));\r\n      const decimalIndex = place > 0 ? 0 : randomInt(1, digits+place-1);\r\n      let decimalString = randomInt(1,9).toString();\r\n      for (let digit = 1; digit < digits; digit++) {\r\n        if (digit == decimalIndex) {\r\n          decimalString += '.';\r\n        }\r\n        decimalString += randomInt(digit != digits-1 ? 0 : 1, 9).toString();\r\n      }\r\n      if (decimalString.slice(-1) == \"5\") {\r\n        if (place > 0) {\r\n          decimalString += \".\";\r\n        }\r\n        decimalString += randomInt(1,9).toString();\r\n      }\r\n      question = \"Round \" + decimalString + \" to the \" + placeName + \" place\";\r\n      answer = Math.round(parseFloat(decimalString)/10**place)/10**(-place);\r\n      if (place >= 0) {\r\n        answer = Math.round(answer)\r\n      }\r\n    } else if (type == 'gcf') {\r\n      let baseMultiple = randomInt(1, level+3);\r\n      let multiples = randomInt(2, level<10 ? 2 : 3);\r\n      let numMax = 5*level;\r\n      let nums = [];\r\n      let maxMultiple = numMax/baseMultiple;\r\n      for (let i=0; i<multiples; i++) {\r\n        nums.push(baseMultiple*randomInt(1, maxMultiple))\r\n      }\r\n      question = \"GCF of the terms: \" + nums.join(\", \");\r\n      while (nums.length > 1) {\r\n        console.log(nums.length);\r\n        console.log(nums);\r\n        nums[1] = greatestFactor(nums[0], nums[1]);\r\n        console.log(nums);\r\n        nums = nums.slice(1);\r\n        console.log(nums);\r\n        console.log('XXX');\r\n      }\r\n      answer = nums[0];\r\n    } else if (type == 'complex add') {\r\n      let a=0;\r\n      let b=0;\r\n      let c=0;\r\n      let d=0;\r\n      while(a*b*c*d==0) {\r\n        a = randomInt(-(level+5), level+5);\r\n        b = randomInt(-(level+5), level+5);\r\n        c = randomInt(-(level+5), level+5);\r\n        d = randomInt(-(level+5), level+5);\r\n      }\r\n      question = \"(\"+a.toString()+(b>=0?\"+\":\"\")+(b==1?\"\":b.toString())+\"i)+\"+\"(\"+c.toString()+(d>=0?\"+\":\"\")+d.toString()+\"i)\";\r\n      let realpart = a+c;\r\n      let imagpart = b+d;\r\n      if (realpart == 0) {\r\n        answer = imagpart.toString()+\"i\";\r\n      } else if (imagpart == 0) {\r\n        answer = realpart.toString();\r\n      } else {\r\n        answer = realpart.toString()+(imagpart>0?\"+\":\"\")+imagpart.toString()+\"i\";\r\n      }\r\n      console.log(answer);\r\n    } else if (type == 'complex sub') {\r\n      let a=0;\r\n      let b=0;\r\n      let c=0;\r\n      let d=0;\r\n      while(a*b*c*d==0) {\r\n        a = randomInt(-(level+5), level+5);\r\n        b = randomInt(-(level+5), level+5);\r\n        c = randomInt(-(level+5), level+5);\r\n        d = randomInt(-(level+5), level+5);\r\n      }\r\n      question = \"(\"+a.toString()+(b>=0?\"+\":\"\")+(b==1?\"\":b.toString())+\"i)-\"+\"(\"+c.toString()+(d>=0?\"+\":\"\")+d.toString()+\"i)\";\r\n      let realpart = a-c;\r\n      let imagpart = b-d;\r\n      if (realpart == 0) {\r\n        answer = imagpart.toString()+\"i\";\r\n      } else if (imagpart == 0) {\r\n        answer = realpart.toString();\r\n      } else {\r\n        answer = realpart.toString()+(imagpart>0?\"+\":\"\")+imagpart.toString()+\"i\";\r\n      }\r\n      console.log(answer);\r\n    } else if (type == 'complex mult') {\r\n      let a=0;\r\n      let b=0;\r\n      let c=0;\r\n      let d=0;\r\n      while(a*b*c*d==0) {\r\n        a = randomInt(-(level+3), level+3);\r\n        b = randomInt(-(level+3), level+3);\r\n        c = randomInt(-(level+3), level+3);\r\n        d = randomInt(-(level+3), level+3);\r\n      }\r\n      question = \"(\"+a.toString()+(b>=0?\"+\":\"\")+(b==1?\"\":b.toString())+\"i)*\"+\"(\"+c.toString()+(d>=0?\"+\":\"\")+d.toString()+\"i)\";\r\n      console.log(a, b, c, d)\r\n      let realpart = a*c-b*d;\r\n      let imagpart = a*d+b*c;\r\n      if (realpart == 0) {\r\n        answer = imagpart.toString()+\"i\";\r\n      } else if (imagpart == 0) {\r\n        answer = realpart.toString();\r\n      } else {\r\n        answer = realpart.toString()+(imagpart>0?\"+\":\"\")+imagpart.toString()+\"i\";\r\n      }\r\n      console.log(answer);\r\n    } else if (type == \"factor a=1\") {\r\n      let a = 0;\r\n      let b = 0;\r\n      while(a*b==0) {\r\n        a = randomInt(-(level+3), level+3);\r\n        b = randomInt(-(level+3), level+3);\r\n      }\r\n      let x = a+b;\r\n      let unit = a*b;\r\n      question = \"Factor x^2\"\r\n    }\r\n    if (question == 0) {\r\n      return this.generate(level, options, modifiers);\r\n    }\r\n    return {'question': question, 'answer': answer}\r\n  }\r\n\r\n  keyHandler = (e) => {\r\n    if (e.nativeEvent.key === 'Enter') {\r\n      this.submitGuess();\r\n    }\r\n    if (e.nativeEvent.key === 'Backspace') {\r\n      this.changeGuess(this.state.guess.slice(0, -1));\r\n    }\r\n    if ('.0123456789-+i'.includes(e.nativeEvent.key)) {\r\n      this.changeGuess(this.state.guess + e.nativeEvent.key);\r\n    }\r\n  };\r\n\r\n  checkSubmit = (e) => {\r\n    console.log(e);\r\n    if (e.nativeEvent.key === 'Enter') {\r\n      this.submitGuess();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <View style = {{flexDirection:\"row\", flexWrap:\"wrap\"}}>\r\n        {\r\n          Object.keys(this.state.problemTypes).map(problemType =>\r\n            <Pressable\r\n                key={problemType}\r\n                onPress={() => this.updateCheckbox(problemType, !this.state.problemTypes[problemType])} \r\n              >\r\n              <Text style={styles.toggleable}>\r\n                <Text style={{color: this.state.problemTypes[problemType] ? 'green':'red'}}>\r\n                  {problemType}\r\n                </Text>\r\n              </Text>\r\n            </Pressable>\r\n          )\r\n        }\r\n        </View>\r\n        <Text style={styles.bigCenter}>\r\n          {this.state.question}\r\n        </Text>\r\n        <TextInput\r\n          style={styles.bigCenter}\r\n          onChangeText={this.changeGuess}\r\n          onKeyPress={this.checkSubmit}\r\n          value={this.state.guess}\r\n          placeholder=\"Answer\"\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <Pressable style={styles.submitContainer} onPress={this.submitGuess}>\r\n          <Text style={styles.submit}>\r\n            Submit\r\n          </Text>\r\n        </Pressable>\r\n        <Text style={styles.bigCenter}>\r\n          Streak: {this.state.streak}\r\n        </Text>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Question/>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  bigCenter: {\r\n    fontSize: '4vw',\r\n    fontWeight: 'bold',\r\n    padding: '2vw',\r\n    textAlign: 'center',\r\n  },\r\n  submit: {\r\n    fontSize: '3vw',\r\n    color: 'white',\r\n  },\r\n  submitContainer: {\r\n    backgroundColor: 'purple',\r\n    borderRadius: '1vw',\r\n    paddingHorizontal: '3vw',\r\n    paddingVertical: '0.5vw'\r\n  },\r\n  toggleable: {\r\n    fontSize: '1.5vw',\r\n    fontWeight: 'bold',\r\n    padding: '.5vw',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}